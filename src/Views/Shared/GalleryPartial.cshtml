@using Gallery.MVC.Models
@model Gallery.MVC.Models.PartialGalleryModel

<style>

    .buttonHandler {
        width: 100%;
        height: @(Model.Limits.LimitValue)px;
        background-color: transparent;
        border: 2px solid transparent;
        color: white;
        font-size: @(Model.Limits.LimitValue)px;
        line-height: @(Model.Limits.LimitValue)px;
        position: absolute;
        z-index: 9999;

        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;

    }

.photo-button {
    color: white;
    @(!Model.IsMobile ? "text-shadow:0px 0px 9px rgba(15,15,15,1);" : "")
    font-weight:normal;color:#FCFCFC;
    letter-spacing:1pt;
    word-spacing:4pt;
    font-size:22px;
    text-align:left;
    cursor: pointer;
}

    #GalleryRoot {
        width: 100%;
        align-content: center !important;
        text-align: center !important;

/*
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;
*/

    }

    .swiper-container {

        /*border: 2px solid red;*/
        align-content: center;
        text-align: center;
    }

    .swiper-slide {
        text-align: center;
        font-size: 18px;
        /* background: #fff; */
        /* Center slide text vertically */
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;
    }

    .swiper-container {
        text-align: center;
        font-size: 18px;
        /* background: #fff; */
        /* Center slide text vertically */
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        -webkit-box-pack: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
        -webkit-box-align: center;
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;
    }


    html, body {
        position: relative;
        height: 100%;
    }

/*
    html, body, .container, .swiper-container {
        margin-left: 0px;
        margin-right: 0px;
        padding-left: 0px;
        padding-right: 0px;
    }
*/

</style>


<div class="swiper-container" style="height: @(40+(int)(Model.Limits.LimitValue / Model.Ratio))px;">
<div class="buttonHandler"  ></div>
<div class="swiper-wrapper">
@foreach (var photo in Model.Topic.Blobs)
{
    int w = photo.Width, h = photo.Height;
    if (Model.Limits.Kind == LimitKind.Height && h < Model.Limits.LimitValue)
    {
        w = (int) (w * Convert.ToDecimal(Model.Limits.LimitValue) / Convert.ToDecimal(h));
        h = Model.Limits.LimitValue;
    }
    w = (int) (w / Model.Ratio);
    h = (int) (h / Model.Ratio);
    <div id="photo_with_buttons" class="swiper-slide" style="width: @(w)px; height: @(h + 30)px !important; display: block; position: relative">
        <div id="just_a_photo" style="border: 1px solid black; width: @(w)px; height: @(h + 0)px; border: none; display: block">
            <img src="/api/v1/Gallery/@photo.Id" width="@(w)px" height="@(h)px" style="border: 1px solid black"/>
        </div>
        @if (true || !Model.IsMobile)
        {
            <div id="buttons" style="width: @(w)px; position: absolute; top: @(h+(Model.IsMobile ? 0 : 4))px; font-size: 30px; color: white; height: 30px; border: none; left: 10px; text-align: @(Model.IsMobile ? "left" : "center")">
                <i class="fa fa-star-o photo-button" aria-hidden="true" onclick="MyOnClick('fa-star-o')"></i>&nbsp;
                <i class="fa fa-thumbs-o-up photo-button" aria-hidden="true" onclick="MyOnClick('fa-thumbs-o-up')"></i>&nbsp;
                <i class="fa fa-thumbs-o-down photo-button" aria-hidden="true" onclick="MyOnClick('fa-thumbs-o-down')"></i>&nbsp;
                <i class="fa fa-share-square-o photo-button" aria-hidden="true" onclick="MyOnClick('fa-share-square-o')"></i>
            </div>
        }
    </div>
}
</div>
</div>

<script>
    var swiper = new Swiper('.swiper-container',
        {
            slidesPerView: 'auto',
            spaceBetween: 20,
            mousewheel: true,
            keyboard: {
                enabled: true,
            },
            height: @(Model.Limits.LimitValue+30),
            autoHeight: false,
        });
</script>

<script>
    // Mobile Safari in standalone mode
    if (('standalone' in window.navigator) && window.navigator.standalone) {

        window.addEventListener('load', function () {

            var links = document.links,
                link,
                i;

            for (i = 0; i < links.length; i++) {
                // Don't do this for javascript: links
                if (~(link = links[i]).href.toLowerCase().indexOf('javascript')) {
                    link.addEventListener('click', function (event) {
                        top.location.href = this.href;
                        event.returnValue = false;
                    }, false);
                }
            }

        }, false);

    }

    function MyOnClick(argClass) {
        $('.buttonHandler').html('<i class="fa ' + argClass + ' photo-button" aria-hidden="true"></i>');
        $('.buttonHandler').show();
        $('.buttonHandler').css({
            opacity: 1,
            height: '@(Model.Limits.LimitValue/3)px'
        });

        var onFinish = function(arg) {
            $('.buttonHandler').hide();
        }

        $('.buttonHandler')
            .transition({ scale: [1.0, 1.0] }, 0)
            .transition({ scale: [3.0, 3.0], y: '-30px' }, 600)
            .transition({ scale: [3.0, 3.0] }, 300)
            .transition({ opacity: 0}, 600, onFinish);
    }
</script>